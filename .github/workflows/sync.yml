name: sync

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: Issue number of original pull request
        required: true

env:
  BASE_REPOSITORY: shota-kamezawa/base_repository
  EXCLUDED_EXT_PATTERN: "\\.(mdx|mock\\.json|stories\\.js)$"
  BASE_SRC_DIR: "src/app/"
  COPY_SRC_DIR: "src/"
  BASE_IMPORT_DIR: "@/src/app/"
  DEST_IMPORT_DIR: "@/src/"

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code ðŸ›Ž
        uses: actions/checkout@main

      - name: Fetch repository
        run: git fetch

      - name: Get detail of pull request
        id: pr_detail
        run: |
          JSON=$( \
            curl -fsSL -i \
              -H "Authorization: token ${{ github.token }}" \
              -H "Content-Type: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ env.BASE_REPOSITORY }}/pulls/${{ github.event.inputs.pr_number }} \
              | tr -d '[:cntrl:]' \
          )
          echo "::set-output name=html_url::$(echo $JSON | jq -r '.html_url')"
          echo "::set-output name=merge_commit_sha::$(echo $JSON | jq -r '.merge_commit_sha')"
          echo "::set-output name=base_ref::$(echo $JSON | jq -r '.base.ref')"
          echo "::set-output name=title::$(echo $JSON | jq -r '.title')"
          echo "::set-output name=user_login::$(echo $JSON | jq -r '.user.login')"
          echo "::set-output name=user_id::$(echo $JSON | jq -r '.user.id')"
          echo "::set-output name=user_html_url::$(echo $JSON | jq -r '.user.html_url')"

      - name: Create epic branch and push it if not exists
        run: |
          git switch ${{ steps.pr_detail.outputs.base_ref }} 2> /dev/null \
            || (git switch -c ${{ steps.pr_detail.outputs.base_ref }} && git push origin ${{ steps.pr_detail.outputs.base_ref }})

      - name: Get files changed of pull request
        id: pr_files_changed
        run: |
          JSON=$( \
            curl -fsSL -i \
              -H "Authorization: token ${{ github.token }}" \
              -H "Content-Type: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ env.BASE_REPOSITORY }}/pulls/12/files \
              | tr -d '[:cntrl:]' \
          )
          REMOVED=$( \
            echo $JSON \
              | jq -r '.[] | select(.previous_filename or .status == "removed") | .previous_filename // .filename' \
              | grep '^${{ env.BASE_SRC_DIR }}' \
              | grep -E '${{ env.EXCLUDED_EXT_PATTERN }}' \
          )
          UPDATED=$( \
            echo $JSON \
              | jq -r '.[] | select(.status != "removed") | .filename' \
              | grep '^${{ env.BASE_SRC_DIR }}' \
              | grep -E '${{ env.EXCLUDED_EXT_PATTERN }}' \
          )
          echo "::set-output name=removed::${REMOVED//$'\n'/\\n}"
          echo "::set-output name=updated::${UPDATED//$'\n'/\\n}"

      - name: Clone base repository
        uses: actions/checkout@main
        with:
          path: ${{ env.BASE_REPOSITORY }}
          repository: ${{ env.BASE_REPOSITORY }}
          ref: ${{ steps.pr_detail.outputs.merge_commit_sha }}

      # FIXME:
      # - name: Replace JavaScript import paths
      #   run: echo FIXME

      # FIXME:
      # - name: Remove excluded files
      #   run: for EX_FILE in $EXCLUDED_FILES; do find ${{ env.BASE_REPOSITORY }} -type f -name $EX_FILE -delete -print; done

      - name: Remove current files
        run: |
          echo '${{ steps.pr_files_changed.removed }}' \
            | sed -e 's ^${{ env.BASE_SRC_DIR }} ${{ env.COPY_SRC_DIR }} g' \
            | while read PATH_TO_REMOVE; do rm -f $PATH_TO_REMOVE; done

      # FIXME:
      # - name: Move target directories
      #   run: for COPY_DIR in $TARGET_DIRECTORIES; do mv -v ${{ env.BASE_REPOSITORY }}/$COPY_DIR $COPY_DIR; done

      - name: Remove directory '${{ env.BASE_REPOSITORY }}'
        run: rm -rf ${{ env.BASE_REPOSITORY }}

      - name: Create pull request
        uses: peter-evans/create-pull-request@main
        with:
          # Branch & Commit settings
          author: ${{ steps.pr_detail.outputs.user_login }} <${{ steps.pr_detail.outputs.user_id }}+${{ steps.pr_detail.outputs.user_login }}@users.noreply.github.com>
          branch: ${{ steps.pr_detail.outputs.base_ref }}-sync
          branch-suffix: timestamp
          commit-message: ðŸ”„ sync with ${{ env.BASE_REPOSITORY }}/${{ steps.pr_detail.outputs.merge_commit_sha }}
          # PR settings
          base: ${{ steps.pr_detail.outputs.base_ref }}
          body: |
            | Name | Detail |
            | --- | --- |
            | Developer | ${{ steps.pr_detail.outputs.user_html_url }} |
            | Original | ${{ steps.pr_detail.outputs.html_url }} |
            | Action | ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} |
          delete-branch: true
          labels: sync
          # team-reviewers: frontend-team
          title: ðŸ”„ ${{ steps.pr_detail.outputs.title }}
